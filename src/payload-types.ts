/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    AgencyBase: AgencyBase;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    AgencyBase: AgencyBaseSelect<false> | AgencyBaseSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  role: 'admin' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AgencyBase".
 */
export interface AgencyBase {
  id: number;
  fullname: string;
  nickname: string;
  followers: number;
  countryFlags:
    | '/flags/af.svg'
    | '/flags/al.svg'
    | '/flags/dz.svg'
    | '/flags/as.svg'
    | '/flags/ad.svg'
    | '/flags/ao.svg'
    | '/flags/ai.svg'
    | '/flags/aq.svg'
    | '/flags/ag.svg'
    | '/flags/ar.svg'
    | '/flags/am.svg'
    | '/flags/aw.svg'
    | '/flags/au.svg'
    | '/flags/at.svg'
    | '/flags/ax.svg'
    | '/flags/az.svg'
    | '/flags/bs.svg'
    | '/flags/bh.svg'
    | '/flags/bd.svg'
    | '/flags/bb.svg'
    | '/flags/by.svg'
    | '/flags/be.svg'
    | '/flags/bz.svg'
    | '/flags/bj.svg'
    | '/flags/bm.svg'
    | '/flags/bt.svg'
    | '/flags/bo.svg'
    | '/flags/bq.svg'
    | '/flags/ba.svg'
    | '/flags/bw.svg'
    | '/flags/bv.svg'
    | '/flags/br.svg'
    | '/flags/io.svg'
    | '/flags/bn.svg'
    | '/flags/bg.svg'
    | '/flags/bf.svg'
    | '/flags/bi.svg'
    | '/flags/cv.svg'
    | '/flags/kh.svg'
    | '/flags/cm.svg'
    | '/flags/ca.svg'
    | '/flags/ky.svg'
    | '/flags/cf.svg'
    | '/flags/td.svg'
    | '/flags/cl.svg'
    | '/flags/cn.svg'
    | '/flags/cx.svg'
    | '/flags/ci.svg'
    | '/flags/cc.svg'
    | '/flags/co.svg'
    | '/flags/km.svg'
    | '/flags/cg.svg'
    | '/flags/cd.svg'
    | '/flags/ck.svg'
    | '/flags/cr.svg'
    | '/flags/hr.svg'
    | '/flags/cu.svg'
    | '/flags/cw.svg'
    | '/flags/cy.svg'
    | '/flags/cz.svg'
    | '/flags/dk.svg'
    | '/flags/dj.svg'
    | '/flags/dm.svg'
    | '/flags/do.svg'
    | '/flags/ec.svg'
    | '/flags/eg.svg'
    | '/flags/sv.svg'
    | '/flags/gq.svg'
    | '/flags/er.svg'
    | '/flags/ee.svg'
    | '/flags/sz.svg'
    | '/flags/et.svg'
    | '/flags/fk.svg'
    | '/flags/fo.svg'
    | '/flags/fj.svg'
    | '/flags/fi.svg'
    | '/flags/fr.svg'
    | '/flags/gf.svg'
    | '/flags/pf.svg'
    | '/flags/tf.svg'
    | '/flags/ga.svg'
    | '/flags/gm.svg'
    | '/flags/gb-eng.svg'
    | '/flags/gb-nir.svg'
    | '/flags/gb-sct.svg'
    | '/flags/gb-wls.svg'
    | '/flags/ge.svg'
    | '/flags/de.svg'
    | '/flags/gh.svg'
    | '/flags/gi.svg'
    | '/flags/gr.svg'
    | '/flags/gl.svg'
    | '/flags/gd.svg'
    | '/flags/gp.svg'
    | '/flags/gu.svg'
    | '/flags/gt.svg'
    | '/flags/gg.svg'
    | '/flags/gn.svg'
    | '/flags/gw.svg'
    | '/flags/gy.svg'
    | '/flags/ht.svg'
    | '/flags/hm.svg'
    | '/flags/va.svg'
    | '/flags/hn.svg'
    | '/flags/hk.svg'
    | '/flags/hu.svg'
    | '/flags/is.svg'
    | '/flags/in.svg'
    | '/flags/id.svg'
    | '/flags/ir.svg'
    | '/flags/iq.svg'
    | '/flags/ie.svg'
    | '/flags/im.svg'
    | '/flags/il.svg'
    | '/flags/it.svg'
    | '/flags/jm.svg'
    | '/flags/jp.svg'
    | '/flags/je.svg'
    | '/flags/jo.svg'
    | '/flags/kz.svg'
    | '/flags/ke.svg'
    | '/flags/ki.svg'
    | '/flags/kp.svg'
    | '/flags/kr.svg'
    | '/flags/kw.svg'
    | '/flags/kg.svg'
    | '/flags/la.svg'
    | '/flags/lv.svg'
    | '/flags/lb.svg'
    | '/flags/ls.svg'
    | '/flags/lr.svg'
    | '/flags/ly.svg'
    | '/flags/li.svg'
    | '/flags/lt.svg'
    | '/flags/lu.svg'
    | '/flags/mo.svg'
    | '/flags/mg.svg'
    | '/flags/mw.svg'
    | '/flags/my.svg'
    | '/flags/mv.svg'
    | '/flags/ml.svg'
    | '/flags/mt.svg'
    | '/flags/mh.svg'
    | '/flags/mq.svg'
    | '/flags/mr.svg'
    | '/flags/mu.svg'
    | '/flags/yt.svg'
    | '/flags/mx.svg'
    | '/flags/fm.svg'
    | '/flags/md.svg'
    | '/flags/mc.svg'
    | '/flags/mn.svg'
    | '/flags/me.svg'
    | '/flags/ms.svg'
    | '/flags/ma.svg'
    | '/flags/mz.svg'
    | '/flags/mm.svg'
    | '/flags/na.svg'
    | '/flags/nr.svg'
    | '/flags/np.svg'
    | '/flags/nl.svg'
    | '/flags/nc.svg'
    | '/flags/nz.svg'
    | '/flags/ni.svg'
    | '/flags/ne.svg'
    | '/flags/ng.svg'
    | '/flags/nu.svg'
    | '/flags/nf.svg'
    | '/flags/mk.svg'
    | '/flags/mp.svg'
    | '/flags/no.svg'
    | '/flags/om.svg'
    | '/flags/pk.svg'
    | '/flags/pw.svg'
    | '/flags/ps.svg'
    | '/flags/pa.svg'
    | '/flags/pg.svg'
    | '/flags/py.svg'
    | '/flags/pe.svg'
    | '/flags/ph.svg'
    | '/flags/pn.svg'
    | '/flags/pl.svg'
    | '/flags/pt.svg'
    | '/flags/pr.svg'
    | '/flags/qa.svg'
    | '/flags/re.svg'
    | '/flags/ro.svg'
    | '/flags/ru.svg'
    | '/flags/rw.svg'
    | '/flags/bl.svg'
    | '/flags/sh.svg'
    | '/flags/kn.svg'
    | '/flags/lc.svg'
    | '/flags/mf.svg'
    | '/flags/pm.svg'
    | '/flags/vc.svg'
    | '/flags/ws.svg'
    | '/flags/sm.svg'
    | '/flags/st.svg'
    | '/flags/sa.svg'
    | '/flags/sn.svg'
    | '/flags/rs.svg'
    | '/flags/sc.svg'
    | '/flags/sl.svg'
    | '/flags/sg.svg'
    | '/flags/sx.svg'
    | '/flags/sk.svg'
    | '/flags/si.svg'
    | '/flags/sb.svg'
    | '/flags/so.svg'
    | '/flags/za.svg'
    | '/flags/gs.svg'
    | '/flags/ss.svg'
    | '/flags/es.svg'
    | '/flags/lk.svg'
    | '/flags/sd.svg'
    | '/flags/sr.svg'
    | '/flags/sj.svg'
    | '/flags/se.svg'
    | '/flags/ch.svg'
    | '/flags/sy.svg'
    | '/flags/tw.svg'
    | '/flags/tj.svg'
    | '/flags/tz.svg'
    | '/flags/th.svg'
    | '/flags/tl.svg'
    | '/flags/tg.svg'
    | '/flags/tk.svg'
    | '/flags/to.svg'
    | '/flags/tt.svg'
    | '/flags/tn.svg'
    | '/flags/tr.svg'
    | '/flags/tm.svg'
    | '/flags/tc.svg'
    | '/flags/tv.svg'
    | '/flags/ug.svg'
    | '/flags/ua.svg'
    | '/flags/um.svg'
    | '/flags/ae.svg'
    | '/flags/gb.svg'
    | '/flags/us.svg'
    | '/flags/uy.svg'
    | '/flags/uz.svg'
    | '/flags/vu.svg'
    | '/flags/ve.svg'
    | '/flags/vn.svg'
    | '/flags/vg.svg'
    | '/flags/vi.svg'
    | '/flags/wf.svg'
    | '/flags/eh.svg'
    | '/flags/xk.svg'
    | '/flags/ye.svg'
    | '/flags/zm.svg'
    | '/flags/zw.svg';
  socialMediaIcons: (
    | '/socials/icons8-instagram.gif'
    | '/socials/icons8-facebook.gif'
    | '/socials/icons8-youtube.gif'
    | '/socials/icons8-twitch.gif'
    | '/socials/icons8-tiktok.gif'
    | '/socials/kick.png'
    | '/socials/icons8-trovo-logo.svg'
  )[];
  country: string;
  avatar?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    avatar?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'AgencyBase';
        value: number | AgencyBase;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AgencyBase_select".
 */
export interface AgencyBaseSelect<T extends boolean = true> {
  fullname?: T;
  nickname?: T;
  followers?: T;
  countryFlags?: T;
  socialMediaIcons?: T;
  country?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        avatar?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}